name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  cache-pnpm:
    name: Cache Pnpm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - uses: pnpm/action-setup@v2
        with:
          version: 6
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --prefer-offline]
  test:
    needs: [cache-pnpm]
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - uses: pnpm/action-setup@v2
        with:
          version: 6
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --prefer-offline]
      - run: pnpm run prebuild
      - run: pnpm run lint
      - run: pnpm test
  deploy:
    needs: [test]
    name: Deploy
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - uses: pnpm/action-setup@v2
        with:
          version: 6
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --prefer-offline]
      - run: pnpm run build
      - uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          cname: alt-json.luma.dev
